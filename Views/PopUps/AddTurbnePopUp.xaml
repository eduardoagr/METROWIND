<mct:Popup
    x:Class="METROWIND.Views.PopUps.AddTurbnePopUp"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:constant="clr-namespace:METROWIND.Constants"
    xmlns:controls="clr-namespace:METROWIND.Controls"
    xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:picker="clr-namespace:Syncfusion.Maui.Picker;assembly=Syncfusion.Maui.Picker"
    xmlns:rex="clr-namespace:METROWIND.Resources"
    xmlns:sys="clr-namespace:System;assembly=netstandard"
    xmlns:vm="clr-namespace:METROWIND.ViewModel"
    x:Name="TurbineAddPopUp"
    x:DataType="vm:AddTurbnePopUpViewModel"
    CanBeDismissedByTappingOutsideOfPopup="False"
    Color="Transparent">

    <Grid
        Padding="20"
        HeightRequest="500"
        RowDefinitions="Auto"
        WidthRequest="400">

        <Border
            x:Name="PopUpBorder"
            Grid.Row="0"
            BackgroundColor="#0213A0"
            Loaded="PopUpBorder_Loaded"
            StrokeShape="RoundRectangle 10"
            StrokeThickness="8">

            <Grid
                Padding="20"
                ColumnDefinitions="*, Auto"
                RowDefinitions="40, 60, 60, 60, 0, 60, *">

                <Label
                    Grid.Row="0"
                    Grid.Column="1"
                    Style="{x:DynamicResource CloseLabelStyle}">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer
                            Command="{Binding CloseCommand}"
                            CommandParameter="{Binding Source={x:Reference TurbineAddPopUp}}" />
                    </Label.GestureRecognizers>
                    <Label.Behaviors>
                        <OnIdiom x:TypeArguments="Behavior">
                            <OnIdiom.Desktop>
                                <mct:TouchBehavior HoveredBackgroundColor="Red" />
                            </OnIdiom.Desktop>
                        </OnIdiom>
                    </Label.Behaviors>
                </Label>

                <Border
                    Grid.Row="1"
                    Grid.ColumnSpan="2"
                    Style="{x:DynamicResource PopUpBorderStyle}">
                    <controls:BorderlessEntry
                        Placeholder="{x:Static rex:AppResource.TurbineName}"
                        Style="{x:DynamicResource AddTurbineForm}"
                        Text="{Binding TurbineName}" />
                </Border>

                <Border
                    Grid.Row="2"
                    Grid.ColumnSpan="2"
                    Style="{x:DynamicResource PopUpBorderStyle}">
                    <Grid ColumnDefinitions="*,60">
                        <Button
                            Grid.Column="1"
                            Command="{Binding OpenDatePickerCommand}"
                            CommandParameter="{Binding Source={x:Reference picker}}"
                            Style="{x:DynamicResource PopUpIconStyle}">
                            <Button.ImageSource>
                                <FontImageSource
                                    FontFamily="ma"
                                    Glyph="{Static constant:MaterialFonts.Calendar_month}"
                                    Color="Black" />
                            </Button.ImageSource>
                        </Button>
                        <controls:BorderlessEntry
                            Grid.Column="0"
                            IsReadOnly="True"
                            Placeholder="{x:Static rex:AppResource.TurbineInstalationDateTime}"
                            Style="{x:DynamicResource AddTurbineForm}"
                            Text="{Binding TurbineFormattedDate}"
                            VerticalOptions="Center" />
                    </Grid>
                </Border>

                <Border
                    Grid.Row="3"
                    Grid.ColumnSpan="2"
                    Style="{x:DynamicResource PopUpBorderStyle}">
                    <controls:BorderlessEntry
                        Placeholder="{x:Static rex:AppResource.TurbineAddress}"
                        Style="{x:DynamicResource AddTurbineForm}"
                        Text="{Binding TurbneAddress}" />
                </Border>

                <picker:SfDateTimePicker
                    x:Name="picker"
                    Grid.Row="4"
                    BackgroundColor="Transparent"
                    Style="{x:DynamicResource DateTimePickerStyle}">
                    <picker:SfDateTimePicker.Behaviors>
                        <mct:EventToCommandBehavior
                            Command="{Binding ConfirmDateCommand}"
                            CommandParameter="{Binding SelectedDate, Source={x:Reference picker}}"
                            EventName="OkButtonClicked" />
                        <mct:EventToCommandBehavior
                            Command="{Binding CancelCommand}"
                            CommandParameter="{Binding Source={x:Reference picker}}"
                            EventName="CancelButtonClicked" />
                    </picker:SfDateTimePicker.Behaviors>
                </picker:SfDateTimePicker>

                <Button
                    Grid.Row="5"
                    Grid.ColumnSpan="2"
                    Command="{Binding SaveCommand}"
                    CommandParameter="{Binding Source={x:Reference TurbineAddPopUp}}"
                    IsEnabled="{Binding IsSaveEnable}"
                    Text="{x:Static rex:AppResource.NewTurbine}"
                    VerticalOptions="End" />
            </Grid>
        </Border>
    </Grid>
</mct:Popup>
